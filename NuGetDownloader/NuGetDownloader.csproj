<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <!--Properties for the publish target-->
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <SelfContained>true</SelfContained>
    <PublishSingleFile>true</PublishSingleFile>
    <PublishReadyToRun>false</PublishReadyToRun>
    <PublishTrimmed>false</PublishTrimmed>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.9.1" />
    <PackageReference Include="NuGet.Versioning" Version="6.9.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Logs\Logs.Abstracts\Logs.Abstracts.csproj" />
    <ProjectReference Include="..\Logs\Logs.Factories\Logs.Factories.csproj" />
    <ProjectReference Include="..\Services\Services.Abstracts\Services.Abstracts.csproj" />
    <ProjectReference Include="..\Services\Services.Factories\Services.Factories.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Appsettings\appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Appsettings\appsettings.logger.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="CopyLoggerAppSettingsToOutputDirectory" AfterTargets="Build">
    <RemoveDir Directories="$(OutDir)Appsettings"></RemoveDir>
    <Copy SourceFiles="$(ProjectDir)Appsettings\appsettings.logger.json" DestinationFiles="$(OutDir)appsettings.logger.json">
    </Copy>
  </Target>

  <Target Name="CopyAppSettingsToOutputDirectory" AfterTargets="Build">
    <RemoveDir Directories="$(OutDir)Appsettings"></RemoveDir>
    <Copy SourceFiles="$(ProjectDir)Appsettings\appsettings.json" DestinationFiles="$(OutDir)appsettings.json">
    </Copy>
  </Target>

  <Target Name="PublishApp" AfterTargets="CopyAppSettingsToOutputDirectory" Condition="'$(Configuration)' == 'Release'">

    <!--Publish the app-->
    <Exec Command="dotnet publish -o $(OutDir)publish -c $(Configuration) --no-build" />

    <!--Delete the appsettings directory from the publish directory-->
    <RemoveDir Directories="$(OutDir)publish\Appsettings"></RemoveDir>

    <!--Copy the appsettings files to the publish directory-->
    <Copy SourceFiles="$(ProjectDir)Appsettings\appsettings.logger.json" DestinationFiles="$(OutDir)publish\appsettings.logger.json"></Copy>
    <Copy SourceFiles="$(ProjectDir)Appsettings\appsettings.json" DestinationFiles="$(OutDir)publish\appsettings.json"></Copy>

    <!--Zip the publish directory-->
    <!--For some reason the zip task works but gets an error: "failed to zip directory because it is being used by another process"-->
    <!--The ContinueOnError="WarnAndContinue" attribute in order for the build to succeed even with the above "error" -->
    <ZipDirectory SourceDirectory="$(OutDir)publish" DestinationFile="$(OutDir)publish\publish-app.zip" Overwrite="true" ContinueOnError="WarnAndContinue" />
  </Target>

</Project>
